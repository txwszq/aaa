<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.kedacom.expenses.model.expenses.ExpUserAccount">
	<resultMap id="ExpUserAccount" type="com.kedacom.expenses.model.expenses.ExpUserAccount">
			<id column="id" property="id" jdbcType="NUMERIC"/>
			<result column="user_id" property="userId" jdbcType="NUMERIC"/>
			<result column="per_advanced" property="perAdvanced" jdbcType="NUMERIC"/>
			<result column="per_paymented_total" property="perPaymentedTotal" jdbcType="NUMERIC"/>
			<result column="per_payed_amount" property="perPayedAmount" jdbcType="NUMERIC"/>
			<result column="per_residual" property="perResidual" jdbcType="NUMERIC"/>
			<result column="per_turn_amount" property="perTurnAmount" jdbcType="NUMERIC"/>
			<result column="special_turn_amount" property="specialTurnAmount" jdbcType="NUMERIC"/>
			<result column="special_advanced" property="specialAdvanced" jdbcType="NUMERIC"/>
			<result column="special_paymented_total" property="specialPaymentedTotal" jdbcType="NUMERIC"/>
			<result column="special_payed_amount" property="specialPayedAmount" jdbcType="NUMERIC"/>
			<result column="special_residual" property="specialResidual" jdbcType="NUMERIC"/>
			<result column="createby" property="createby" jdbcType="NUMERIC"/>
			<result column="createtime" property="createtime" jdbcType="TIMESTAMP"/>
			<result column="updatetime" property="updatetime" jdbcType="TIMESTAMP"/>
			<result column="updateby" property="updateby" jdbcType="NUMERIC"/>
	</resultMap>
	
	<sql id="columns">
		id ,user_id ,per_advanced ,per_paymented_total ,per_payed_amount ,per_residual ,per_turn_amount ,special_turn_amount ,special_advanced ,special_paymented_total ,special_payed_amount ,special_residual ,createby ,createtime ,updatetime ,updateby 
	</sql>
	
	<sql id="dynamicWhere">
		<where>
				<if test="@Ognl@isNotEmpty(userId)"> AND user_id = #{userId} </if>
				<if test="@Ognl@isNotEmpty(perAdvanced)"> AND per_advanced = #{perAdvanced} </if>
				<if test="@Ognl@isNotEmpty(perPaymentedTotal)"> AND per_paymented_total = #{perPaymentedTotal} </if>
				<if test="@Ognl@isNotEmpty(perPayedAmount)"> AND per_payed_amount = #{perPayedAmount} </if>
				<if test="@Ognl@isNotEmpty(perResidual)"> AND per_residual = #{perResidual} </if>
				<if test="@Ognl@isNotEmpty(perTurnAmount)"> AND per_turn_amount = #{perTurnAmount} </if>
				<if test="@Ognl@isNotEmpty(specialTurnAmount)"> AND special_turn_amount = #{specialTurnAmount} </if>
				<if test="@Ognl@isNotEmpty(specialAdvanced)"> AND special_advanced = #{specialAdvanced} </if>
				<if test="@Ognl@isNotEmpty(specialPaymented_total)"> AND special_paymented_total = #{specialPaymentedTotal} </if>
				<if test="@Ognl@isNotEmpty(specialPayedAmount)"> AND special_payed_amount = #{specialPayedAmount} </if>
				<if test="@Ognl@isNotEmpty(specialResidual)"> AND special_residual = #{specialResidual} </if>
				<if test="@Ognl@isNotEmpty(createby)"> AND createby = #{createby} </if>
				<if test="@Ognl@isNotEmpty(begincreatetime)"> AND createtime  >=#{begincreatetime,jdbcType=DATE} </if>
				<if test="@Ognl@isNotEmpty(endcreatetime)"> AND createtime &lt;=#{endcreatetime,jdbcType=DATE}</if>
				<if test="@Ognl@isNotEmpty(beginupdatetime)"> AND updatetime  >=#{beginupdatetime,jdbcType=DATE} </if>
				<if test="@Ognl@isNotEmpty(endupdatetime)"> AND updatetime &lt;=#{endupdatetime,jdbcType=DATE}</if>
				<if test="@Ognl@isNotEmpty(updateby)"> AND updateby = #{updateby} </if>
		</where>
	</sql>
	
	<insert id="add" parameterType="com.kedacom.expenses.model.expenses.ExpUserAccount"  useGeneratedKeys="true" keyProperty="id">
		INSERT INTO exp_user_account
		(<include refid="columns"/>)
		VALUES
		(#{id,jdbcType=NUMERIC},#{userId,jdbcType=NUMERIC},#{perAdvanced,jdbcType=NUMERIC},#{perPaymentedTotal,jdbcType=NUMERIC},#{perPayedAmount,jdbcType=NUMERIC},#{perResidual,jdbcType=NUMERIC},#{perTurnAmount,jdbcType=NUMERIC},#{specialTurnAmount,jdbcType=NUMERIC},#{specialAdvanced,jdbcType=NUMERIC},#{specialPaymentedTotal,jdbcType=NUMERIC},#{specialPayedAmount,jdbcType=NUMERIC},#{specialResidual,jdbcType=NUMERIC},#{createby,jdbcType=NUMERIC},#{createtime,jdbcType=TIMESTAMP},#{updatetime,jdbcType=TIMESTAMP},#{updateby,jdbcType=NUMERIC})
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM exp_user_account 
		WHERE
		id=#{id}
	</delete>
	
	
	<update id="update" parameterType="com.kedacom.expenses.model.expenses.ExpUserAccount">
		UPDATE exp_user_account  SET
		id=#{id,jdbcType=NUMERIC},
		user_id=#{userId,jdbcType=NUMERIC},
		per_advanced=#{perAdvanced,jdbcType=NUMERIC},
		per_paymented_total=#{perPaymentedTotal,jdbcType=NUMERIC},
		per_payed_amount=#{perPayedAmount,jdbcType=NUMERIC},
		per_residual=#{perResidual,jdbcType=NUMERIC},
		per_turn_amount=#{perTurnAmount,jdbcType=NUMERIC},
		special_turn_amount=#{specialTurnAmount,jdbcType=NUMERIC},
		special_advanced=#{specialAdvanced,jdbcType=NUMERIC},
		special_paymented_total=#{specialPaymentedTotal,jdbcType=NUMERIC},
		special_payed_amount=#{specialPayedAmount,jdbcType=NUMERIC},
		special_residual=#{specialResidual,jdbcType=NUMERIC},
		createby=#{createby,jdbcType=NUMERIC},
		createtime=#{createtime,jdbcType=TIMESTAMP},
		updatetime=#{updatetime,jdbcType=TIMESTAMP},
		updateby=#{updateby,jdbcType=NUMERIC}
		WHERE
		id=#{id}
	</update>
	
	
	<select id="getById" parameterType="java.lang.Long" resultMap="ExpUserAccount" useCache="true">
		SELECT <include refid="columns"/>
		FROM exp_user_account
		WHERE id=#{id}
	</select>
	
	<select id="getAll" resultMap="ExpUserAccount" useCache="false">
		SELECT <include refid="columns"/>
		FROM exp_user_account   
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by id  desc
		</if>
	</select>
	
	<select id="getByUserId" parameterType="java.lang.Long" resultMap="ExpUserAccount" useCache="true">
		SELECT <include refid="columns"/>
		FROM exp_user_account
		WHERE user_id=#{userId}
	</select>

	
	<select id="getUserAccount" resultMap="ExpUserAccount" useCache="false">
		SELECT sys_user.fullname as userName, exp_user_account.*
		FROM exp_user_account   
		left join  sys_user on    sys_user.userid=exp_user_account.user_id
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by id  desc
		</if>
	</select>
	
</mapper>
